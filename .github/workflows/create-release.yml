name: create-release
on:
  push: 
    tags:
      - "v*"
jobs:
  build:
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Branch name
        id: branch_name
        run: |
          echo ::set-output name=SOURCE_NAME::${GITHUB_REF#refs/*/}
          echo ::set-output name=SOURCE_BRANCH::${GITHUB_REF#refs/heads/}
          echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}
      
      - name: Prepare Folder For Packaging
        run: |
          mkdir -p "Assets/hfcRed/Player Tracker"
          ls | grep -v "Assets" | xargs -i{} mv {} "Assets/hfcRed/Player Tracker"
          echo -e "fileFormatVersion: 2\nguid: 8d7266633ec082049a9ed624645728b8\nfolderAsset: yes\nDefaultImporter:\n  externalObjects: {}\n  userData: \n  assetBundleName: \n  assetBundleVariant: " > "Assets/hfcRed.meta"
          echo -e "fileFormatVersion: 2\nguid: 65072121696144984ae9f48e1b94d119\nfolderAsset: yes\nDefaultImporter:\n  externalObjects: {}\n  userData: \n  assetBundleName: \n  assetBundleVariant: " > "Assets/hfcRed/Player Tracker.meta"
          find "Assets/" -name \*.meta ! -name "Media.meta" -not -path "Assets/hfcRed/Player Tracker/Media/*" > package

      - name: Create UnityPackage
        env:
          SOURCE_TAG: ${{ steps.branch_name.outputs.SOURCE_TAG }}
        uses: pCYSl5EDgo/create-unitypackage@master
        with:
          package-path: 'Player_Tracker_${{ env.SOURCE_TAG }}.unitypackage'
          include-files: package
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: "Player Tracker ${{ env.SOURCE_TAG }}"
          files: |
            Player_Tracker_${{ env.SOURCE_TAG }}.unitypackage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SOURCE_TAG: ${{ steps.branch_name.outputs.SOURCE_TAG }}
